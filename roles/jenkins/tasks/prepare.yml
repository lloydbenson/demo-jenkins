---

- name: generate ssh key
  user: name={{ jenkins_user }} generate_ssh_key=yes

- name: install packages
  package: name="{{ item }}" state=latest
  become: true
  with_items:
    - gcc-c++
    - git
    - java-1.8.0-openjdk
    - make
    - nginx
    - tar
    - xorg-x11-server-Xvfb
    - zip

## no longer required using https
#- name: accept github key
#  shell: ssh -o StrictHostKeyChecking=no -T git@github.com
#  ignore_errors: true
#  changed_when: false

- name: accept local key
  shell: ssh -o StrictHostKeyChecking=no localhost
  ignore_errors: true
  changed_when: false

#- name: ssh to deploy host
#  shell: ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no {{ jenkins_user }}@{{ item }} "cat /etc/hosts"
#  changed_when: false
#  ignore_errors: true
#  with_items: "{{ deploy_envs }}"

- name: mkdir apps dir
  file:
    path={{ jenkins_apps }}
    state=directory
    owner={{ jenkins_user }}
    group={{ jenkins_group }}
    mode=0755
  become: true

- name: mkdir jenkins install dirs
  file:
    path={{ jenkins_install }}/{{ item }}
    state=directory
    owner={{ jenkins_user }}
    group={{ jenkins_group }}
    mode=0755
  with_items:
    - plugins
    - jobs

- name: get local ssh pub key
  shell: cat /home/{{ jenkins_user }}/.ssh/id_rsa.pub
  register: pub_key
  changed_when: false

- name: add local authorized key
  authorized_key: user={{ jenkins_user }} key="{{ lookup('file', '/home/{{ jenkins_user }}/.ssh/id_rsa.pub') }}"

- name: get nodejs version
  shell: /apps/node/bin/node -v
  register: nodejs
  ignore_errors: true
  changed_when: false

- include: nodejs.yml
  when: nodejs.stdout != "{{ nodejs_version }}"

- name: ensure /etc/hosts entry for servers
  lineinfile: dest=/etc/hosts line="{{ item }}" state=present
  with_items:
    - "127.0.0.1 lloyddemo"
  become: true

- name: generate .bashrc
  template:
    src=.bashrc.j2
    dest=/home/{{ jenkins_user }}/.bashrc

- name: generate sudoers
  template:
    src=sudoers.j2
    dest=/etc/sudoers
  become: true
